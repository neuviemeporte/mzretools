#include "dos/modrm.h"

const ModrmOperand MODRM_OP1[] = {
//   0           1           2           3           4           5           6           7           8           9           A           B           C           D           E           F
MODRM_Eb,     MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 0
MODRM_Eb,     MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 1
MODRM_Eb,     MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 2
MODRM_Eb,     MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 3
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 4
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 5
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 6
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 7
MODRM_Eb,     MODRM_Ev,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv,   MODRM_Gb,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv,   MODRM_Ev,   MODRM_Gv,   MODRM_Sw,   MODRM_Ev, // 8
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 9
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // A
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // B
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Gv,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // C
MODRM_Eb,    MODRM_Ev,    MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // D
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // E
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Eb,   MODRM_Ev, // F
};

const ModrmOperand MODRM_OP2[] = {
//   0           1           2           3           4           5           6           7           8           9           A           B           C           D           E           F
MODRM_Gb,     MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Gb,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 0
MODRM_Gb,     MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Gb,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 1
MODRM_Gb,     MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Gb,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 2
MODRM_Gb,     MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Gb,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 3
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 4
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 5
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 6
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 7
MODRM_Ib,     MODRM_Iv,   MODRM_Ib  , MODRM_Ib,   MODRM_Eb,   MODRM_Ev,   MODRM_Eb,   MODRM_Ev,   MODRM_Gb,   MODRM_Gv,   MODRM_Eb,   MODRM_Ev,   MODRM_Sw,    MODRM_M,   MODRM_Ev, MODRM_NONE, // 8
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // 9
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // A
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // B
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE,   MODRM_Mp,   MODRM_Mp,   MODRM_Ib,   MODRM_Iv, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // C
MODRM_1,       MODRM_1,   MODRM_CL,   MODRM_CL, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // D
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // E
MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, MODRM_NONE, // F
};

ModrmOperand modrm_op1(const Byte opcode) {
    return MODRM_OP1[opcode];
}

ModrmOperand modrm_op2(const Byte opcode) {
    return MODRM_OP2[opcode];
}