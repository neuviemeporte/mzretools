#!/usr/bin/env python3
# 
# This will take an assembly listing generated by IDA and replace routines in the assembly
# by an 'include' directive if an assembly file corresponding to that routine's name exists.
#
import sys
import os
from util import *

def process_assembly(infile, outfile, routine_dir):
    proc = None
    lineno = 0
    for line in infile:
        lineno += 1
        # new routine start, try to find its implementation to substitute
        if newproc := start_proc(line):
            if proc:
                error(f"New routine ({newproc}) start while previous ({proc}) not closed", lineno)
            # ignore routines starting with underscore, they are from a library 
            if newproc.startswith('_'):
                info(f"Ignoring {newproc}")
                outfile.write(line)
                continue
            # attempt to locate an asm file with the same name as this routine
            routine_path = routine_dir + os.path.sep + newproc + ".asm"
            if os.path.isfile(routine_path):
                info(f'Routine {newproc} -> found implementation in {routine_path}')
                proc = newproc
                outfile.write(f'include {routine_dir}\{proc}.asm')
            else:
                info(f'Routine {newproc} -> no implementation')
                outfile.write(line)
        # end of replaced routine, stop ignoring lines
        elif proc and (endproc := end_proc(line)):
            if endproc != proc:
                error(f"End of routine {endproc} without closing previous routine: {proc}")
            proc = None
        # other line outside of routine with existing implementation, output as is
        elif proc is None:
            outfile.write(line)

def main(args):
    if len(args) != 4:
        error(f"Syntax: {args[0]} infile.asm outfile.asm routines_directory")
    in_fname = args[1]
    out_fname = args[2]
    routines = args[3]

    if not os.path.isfile(in_fname):
        error(f"Input file does not exist: {in_fname}")
    if not os.path.isdir(routines):
        error(f"Routines directory '{routines}' does not exist, nothing to replace'")
    if os.path.isfile(out_fname):
        info(f"Output file {out_fname} exists, overwriting")

    with open(in_fname, encoding='cp850') as infile, open(out_fname, "w", encoding='cp850') as outfile:
        process_assembly(infile, outfile, routines)

if __name__ == '__main__':
    main(sys.argv)