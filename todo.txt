- use relative threshold (e.g. 10%) in mzdup instead of same instructon count for all-size routines
- implement mzsig, generate signatures from exe+map, have mzdup ingest .sig instead
- support link .map as input to mzsig
- output ida .pat files for flirt?
- detect and erase bogus data segments cutting across code segments, e.g. Data2/3 in egame.exe, notice when walking over code which is in the data segment
- mark null blocks as bad/unreachable in mzmap - runs of 0000/add [bx+si],al probably don't make sense in legitimate code
- after making compare blocks more granular, probably stack offsets mapping within routine is lost when jumping to new queue item? need to preserve those
- add segments to routine map constructor, trace current segment, place unclaimed blocks in current rather than load segment
- OMF parser, extract segments, function signatures etc
- add load() call to mzimage constructor, will probably break tests